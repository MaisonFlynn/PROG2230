// <auto-generated />
using System;
using Ass1gnment.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Ass1gnment.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20241001042255_Innit")]
    partial class Innit
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Ass1gnment.Entities.Measurement", b =>
                {
                    b.Property<int>("MeasurementID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MeasurementID"));

                    b.Property<DateTime?>("Date")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("Diastolic")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("PositionID")
                        .HasColumnType("int");

                    b.Property<int?>("Systolic")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("MeasurementID");

                    b.HasIndex("PositionID");

                    b.ToTable("Measurement");

                    b.HasData(
                        new
                        {
                            MeasurementID = 1,
                            Date = new DateTime(2008, 2, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Diastolic = 121,
                            PositionID = 1,
                            Systolic = 181
                        },
                        new
                        {
                            MeasurementID = 2,
                            Date = new DateTime(2025, 12, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Diastolic = 91,
                            PositionID = 3,
                            Systolic = 142
                        },
                        new
                        {
                            MeasurementID = 3,
                            Date = new DateTime(2002, 11, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Diastolic = 85,
                            PositionID = 1,
                            Systolic = 131
                        },
                        new
                        {
                            MeasurementID = 4,
                            Date = new DateTime(1998, 5, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Diastolic = 79,
                            PositionID = 2,
                            Systolic = 122
                        },
                        new
                        {
                            MeasurementID = 5,
                            Date = new DateTime(1996, 2, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Diastolic = 78,
                            PositionID = 2,
                            Systolic = 188
                        });
                });

            modelBuilder.Entity("Ass1gnment.Entities.Position", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Position");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "Standing"
                        },
                        new
                        {
                            ID = 2,
                            Name = "Sitting"
                        },
                        new
                        {
                            ID = 3,
                            Name = "Supine"
                        });
                });

            modelBuilder.Entity("Ass1gnment.Entities.Measurement", b =>
                {
                    b.HasOne("Ass1gnment.Entities.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Position");
                });
#pragma warning restore 612, 618
        }
    }
}
